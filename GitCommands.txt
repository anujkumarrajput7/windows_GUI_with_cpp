Added notes here for devs %
>
>
1. Open Your Forked Repository in VS Code
Open VS Code and open your forked repository folder.
2. Open the Terminal
In VS Code, open a terminal window by navigating to View > Terminal or pressing Ctrl + `.
3. Add the Upstream Remote
To keep your fork up-to-date, you’ll need to add the original repository (the one you forked from) as an upstream remote.

In the terminal, run:

//git remote add upstream <original-repo-url>
Replace <original-repo-url> with the URL of the original repository.

You can verify that the upstream was added by running:

bash
Copy code
//git remote -v
This should list both origin (your fork) and upstream (the original repository).

4. Fetch Changes from the Upstream Repository
To get updates from the original repository, run:
bash
Copy code
//git fetch upstream
This command will fetch any changes from the upstream without merging them.
5. Merge Changes into Your Fork’s Branch
Switch to the branch where you want to merge changes (usually main or master):
bash
Copy code
//git checkout main
Merge the changes from upstream into your branch:
bash
Copy code
//git merge upstream/main
Resolve any conflicts if they arise, then add and commit the resolved files.
6. Push Changes to Your Fork on GitHub
Once the changes are merged and conflicts (if any) are resolved, push them to your forked repository:
bash
Copy code
//git push origin main
7.to compile program
//g++ -o ballmotion ballmotion.cpp -lgdi32